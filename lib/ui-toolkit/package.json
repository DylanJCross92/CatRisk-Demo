{
  "_args": [
    [
      {
        "raw": "ui-toolkit@github:icg360/ui-toolkit#1.1.0",
        "scope": null,
        "escapedName": "ui-toolkit",
        "name": "ui-toolkit",
        "rawSpec": "github:icg360/ui-toolkit#1.1.0",
        "spec": "github:icg360/ui-toolkit#1.1.0",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:icg360/ui-toolkit.git#1.1.0",
          "sshUrl": "git+ssh://git@github.com/icg360/ui-toolkit.git#1.1.0",
          "httpsUrl": "git+https://github.com/icg360/ui-toolkit.git#1.1.0",
          "gitUrl": "git://github.com/icg360/ui-toolkit.git#1.1.0",
          "shortcut": "github:icg360/ui-toolkit#1.1.0",
          "directUrl": "https://raw.githubusercontent.com/icg360/ui-toolkit/1.1.0/package.json"
        }
      },
      "/Applications/MAMP/htdocs/OHS_Work/Clients/SageSure/CatRisk New/catrisk"
    ]
  ],
  "_from": "icg360/ui-toolkit#1.1.0",
  "_id": "ui-toolkit@1.1.0",
  "_inCache": true,
  "_location": "/ui-toolkit",
  "_phantomChildren": {
    "fbjs": "0.8.16",
    "loose-envify": "1.3.1",
    "object-assign": "4.1.1"
  },
  "_requested": {
    "raw": "ui-toolkit@github:icg360/ui-toolkit#1.1.0",
    "scope": null,
    "escapedName": "ui-toolkit",
    "name": "ui-toolkit",
    "rawSpec": "github:icg360/ui-toolkit#1.1.0",
    "spec": "github:icg360/ui-toolkit#1.1.0",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:icg360/ui-toolkit.git#1.1.0",
      "sshUrl": "git+ssh://git@github.com/icg360/ui-toolkit.git#1.1.0",
      "httpsUrl": "git+https://github.com/icg360/ui-toolkit.git#1.1.0",
      "gitUrl": "git://github.com/icg360/ui-toolkit.git#1.1.0",
      "shortcut": "github:icg360/ui-toolkit#1.1.0",
      "directUrl": "https://raw.githubusercontent.com/icg360/ui-toolkit/1.1.0/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/icg360/ui-toolkit.git#fe0bc197019b3cb5ed29d1aae37aa554dd3ba599",
  "_shasum": "1da540d62fc0a6b6cd6aa95ad5039d4fff0d471c",
  "_shrinkwrap": null,
  "_spec": "ui-toolkit@github:icg360/ui-toolkit#1.1.0",
  "_where": "/Applications/MAMP/htdocs/OHS_Work/Clients/SageSure/CatRisk New/catrisk",
  "author": {
    "name": "Insight Catastrophe Group"
  },
  "bugs": {
    "url": "https://github.com/icg360/ui-toolkit/issues"
  },
  "config": {
    "s3url": "s3://icg-ui-toolkit"
  },
  "dependencies": {
    "classnames": "2.2.5",
    "dom-helpers": "3.2.1",
    "keycode": "2.1.9",
    "prop-types": "15.6.0",
    "react": "15.4.2",
    "react-dom": "15.4.2",
    "react-overlays": "0.8.3",
    "react-prop-types": "0.4.0",
    "react-scripts": "1.0.17",
    "react-transition-group": "2.2.1",
    "uncontrollable": "4.1.0"
  },
  "description": "UI toolkit that will serve as the foundational, global styles and components for each of Insight's web applications. Based on Bootstrap.",
  "devDependencies": {
    "autoprefixer": "6.7.2",
    "babel-cli": "6.26.0",
    "babel-core": "6.23.1",
    "babel-eslint": "7.2.3",
    "babel-preset-react-app": "2.1.0",
    "babel-preset-stage-0": "6.22.0",
    "chai": "3.5.0",
    "chai-enzyme": "0.6.1",
    "cross-env": "5.0.5",
    "enzyme": "2.7.1",
    "eslint": "4.5.0",
    "eslint-config-prettier": "2.3.0",
    "eslint-loader": "1.9.0",
    "eslint-plugin-prettier": "2.2.0",
    "eslint-plugin-react": "7.3.0",
    "glob": "7.1.2",
    "gulp": "3.9.1",
    "gulp-autoprefixer": "3.1.1",
    "gulp-babel": "6.1.2",
    "gulp-sass": "3.1.0",
    "gulp-sourcemaps": "2.4.1",
    "husky": "0.14.3",
    "lint-staged": "4.0.3",
    "node-sass": "4.5.0",
    "prettier": "1.5.3",
    "prismjs": "1.6.0",
    "react-addons-test-utils": "15.4.2",
    "react-docgen": "2.17.0",
    "react-prism": "4.3.0",
    "react-redux": "5.0.3",
    "react-router": "3.0.2",
    "redux": "3.7.2",
    "redux-thunk": "2.2.0",
    "s3-cli": "0.13.0",
    "shx": "0.2.2",
    "sinon": "1.17.4"
  },
  "engines": {
    "node": ">=7.4.0"
  },
  "gitHead": "fe0bc197019b3cb5ed29d1aae37aa554dd3ba599",
  "homepage": "http://.",
  "lint-staged": {
    "src/**/!(*Spec|*.raw).js": [
      "eslint --fix --config ./config/eslintrc.json",
      "git add"
    ],
    "src/**/*.{css,scss}": [
      "prettier --write",
      "git add"
    ]
  },
  "main": "dist/js/index.js",
  "name": "ui-toolkit",
  "optionalDependencies": {},
  "private": true,
  "readme": "# Insight UI Toolkit - [Docs](https://ui-toolkit.icg360.net/)\n\n![toolkit](https://i.imgur.com/r43g96e.png)\n\n## Overview\n\nBase CSS and React components that'll serve as the foundational, global styles for each of Insight's web applications. Based on and forked from Bootstrap.\n\nThis repo consists of two main parts:\n\n1. The library (`src/lib/`)\n    - The actual code you pull into your application to use the UI toolkit. It is built with `gulp`.\n2. The documentation (`src/docs/`)\n    - A static site documenting the library. It is built with webpack (on top of `react-scripts`).\n\n### Local development `npm run start`\n\nGets a local site up and running on [http://localhost:3000](http://localhost:3000) where you can make changes to the library code or the  documentation.\n\nNote: the documentation site is setup to use the [redux-devtools-extension](https://github.com/zalmoxisus/redux-devtools-extension) for debugging redux actions. Once you install the browser extension, you’ll be good to go. \n\n#### Sass/CSS\n\nThe library styles are built on top of Sass. You’ll have to compile Sass->CSS to see any changes you make to the source files:\n\n- `npm run css` compile the CSS once\n- `npm run css:watch` compile the CSS when Sass files change\n\nThe documentation site uses the library’s compiled CSS in general, but has docs-specific styles as well. However, the docs styles are written in CSS. So no need to compile anything.\n\n### Release a new version `npm run release -- VERSION`\n\nRuns an automated script that bumps the version, builds the new version of the library to `dist/`, uploads the new version of the docs to an s3 bucket, and pushes all these changes to the origin as a release branch.\n\nThen you can go to Github, create a PR for your release branch, and merge it back in.\n\n**Note**: in order to be able to upload the new version docs to s3, you'll need a [s3cfg config file](https://github.com/andrewrk/node-s3-cli#configuration) with your AWS credentials in this project's root.\n\n### Testing `npm test`\n\n## Using these assets in other projects\n\nCompiled assets are in the `dist/` folder. To use these assets in other projects, bring the `ui-toolkit` repo in as you would any other node module, specifying the version you want:\n\n```\nnpm i --save github:icg360/ui-toolkit#1.0.0\n```\n\nTo import JS components:\n\n```js\nimport { Button, Nav, Logo } from 'ui-toolkit';\n```\n\nTo import styles, choose a “theme”:\n\n```js\n/* Basic Insight theme */\nimport 'ui-toolkit/dist/css/insight.css';\n\n/* For FedNat-themed products */\nimport 'ui-toolkit/dist/css/fednat.css';\n\n/* For Sagesure-theme products */\nimport 'ui-toolkit/dist/css/sagesure.css';\n```\n\n## Linting\n\nThis repo uses ESLint and Prettier to keep the repo functional and accessible. Check out the [Front End Documentation](https://github.com/icg360/front-end/blob/master/code-formatting.md) to see what the tools are, how they work and how to change the configuration.   \n\n**NOTE: At this time all `__tests__` directories are excluded from linting. When tests are refactored, that exclusion must be removed from the `lint`, `lint:fix`, and `lint-staged` scripts.**  \n  \n**NOTE: At this time, some React rules are muted off in `styleguide/components/CodeExample.js` and `styleguide/components/CodeMirrorEditor.js`. If these files are refactored *make sure those rules are unmuted*. They are part of the `eslint-plugin-react` recommended settings that are not currently passing and *absolutely should be passing*.**  \n\n## Adding Icons\n\nAll the files in `src/components/Icons` are generated by the `build:icons` npm script. This script does the following:\n\n1. Takes all `.svg` files from `src/assets/icons` and converts them into named react components based on the svg’s file name.\n2. Creates an `index.js` file for `src/components/Icons` that exports each icon as named react component.\n\nThe automatically generated file `src/components/Icons/index.js` exports its components at the root level in `src/components` by a single line export (`export * from './components/Icons'`). So when you run the build, all the associated components *and* exports should be automatically generated. This means developer is using `insight-ui` should be able to do `import {IconCheck} from 'insight-ui'`.\n\n**Note:** If you ever need a new icon, you should be able to just drop the icon's `.svg` file in the folder with the other svgs, run the script, and commit your changes. The icon components will all be overwritten but, unless you change the build script, the existing icons should all appear the same in git. Only your new icon files will be present.\n\n### Notes on unit tests:\n\nNot all unit tests are complete. If a `Spec.js` file is the root component folder as opposed to the `__tests__` folder, that unit test is failing and needs to be rewritten to use the Enyzme/Chai/Jest tooling as opposed to the Teaspoon tooling which is not available in this repo.\n\n## Known broken components\n\n- [Tabs](https://github.com/icg360/ui-toolkit/issues/68)\n- [Overlay](https://github.com/icg360/ui-toolkit/issues/75)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/icg360/ui-toolkit.git"
  },
  "scripts": {
    "css:build": "node-sass --precision 8 ./src/lib/styles -o ./public/styles",
    "css:watch": "node-sass -w -r --precision 8 ./src/lib/styles -o ./public/styles",
    "docs:add-version": "shx echo $npm_package_version >> ./public/versions.txt",
    "docs:build": "npm run css:build && cross-env REACT_APP_VERSION=$npm_package_version react-scripts build",
    "docs:dist": "npm run docs:add-version && npm run docs:build && npm run docs:structure-files && npm run docs:write-redirect && npm run docs:upload",
    "docs:structure-files": "shx rm -rf ./build-s3 && shx mkdir ./build-s3 && shx cp -R ./build ./build-s3/$npm_package_version && shx mv ./build-s3/$npm_package_version/versions.txt ./build-s3/versions.txt",
    "docs:upload": "s3-cli --config ./.s3cfg del --recursive $npm_package_config_s3url/$npm_package_version/ && s3-cli --config ./.s3cfg sync ./build-s3/ $npm_package_config_s3url/",
    "docs:write-redirect": "shx echo '<!doctype html><html><head><meta http-equiv=refresh content=0;URL=/'$npm_package_version' /></head></html>' > ./build-s3/index.html",
    "lib:build:icons": "node scripts/lib-build-icons.js && prettier --write \"./src/lib/components/Icons/*.js\"",
    "lib:build:raw-components": "node scripts/lib-build-raw-components.js",
    "lib:dist": "gulp --gulpfile ./scripts/lib-dist.js",
    "lint": "eslint --config ./config/eslintrc.json '{src,styleguide}/**/!(*Spec|*.raw).js'",
    "lint:fix": "eslint --fix --config ./config/eslintrc.json '{src,styleguide}/**/!(*Spec|*.raw).js'",
    "precommit": "lint-staged",
    "prestart": "npm run lib:build:raw-components && npm run css:build",
    "release": "./scripts/release.sh",
    "slate": "rimraf node_modules && npm i",
    "start": "cross-env REACT_APP_VERSION=$npm_package_version react-scripts start",
    "test": "react-scripts test --env=jsdom"
  },
  "version": "1.1.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">=7.4.0"
      },
      "pkgid": "ui-toolkit@1.1.0"
    }
  ]
}
